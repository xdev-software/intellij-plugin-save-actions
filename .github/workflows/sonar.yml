name: Sonar

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'

env:
  SONARCLOUD_ORG: ${{ github.event.organization.login }}
  SONARCLOUD_HOST: https://sonarcloud.io

jobs:
  token-check:
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/')) }}
    outputs:
      hasToken: ${{ steps.check-token.outputs.has }}
    steps:
      - id: check-token
        run: |
          [ -z $SONAR_TOKEN ] && echo "has=false" || echo "has=true" >> "$GITHUB_OUTPUT"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sonar-scan:
    runs-on: ubuntu-latest
    needs: token-check
    if: ${{ needs.token-check.outputs.hasToken }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build
        run: |
          ./gradlew build sonarqube --info \
            -Dsonar.projectKey=${{ env.SONARCLOUD_ORG }}_${{ github.event.repository.name }} \
            -Dsonar.organization=${{ env.SONARCLOUD_ORG }} \
            -Dsonar.host.url=${{ env.SONARCLOUD_HOST }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
