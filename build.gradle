plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.intellij' version '1.14.2'
    id 'org.sonarqube' version '4.3.0.3225'
}

def properties(String key) {
    return providers.gradleProperty(key)
}

def environment(String key) {
    return providers.environmentVariable(key)
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'

// Add plugin group and version
group = properties("pluginGroup").get()
version = properties("pluginVersion").get()

// Add build script repository to maven central
repositories {
    mavenCentral()
}

// Add dependencies to test, junit5 api (annotations) and engine (runtime)
dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.3'),
            'org.junit.jupiter:junit-jupiter',
            'org.junit.jupiter:junit-jupiter-engine',
            'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because("Only needed to run tests in a version of IntelliJ IDEA that bundles older versions")
    }
}

// Add intellij task configuration for base intellij version (minimum compatibility)
// This needs to fit the tag <idea-version since-build="xxx"> in plugin.xml
// See https://www.jetbrains.com/intellij-repository/snapshots
// See https://www.jetbrains.com/intellij-repository/releases
intellij {
    pluginName = properties("pluginName")

    version = properties("platformVersion")
    type = properties("platformType")

    // Plugin Dependencies. Uses `platformPlugins` property from the gradle.properties file.
    plugins = properties("platformPlugins").map { it.split(",").collect { it.trim() }.findAll { !it.empty } }

    updateSinceUntilBuild = false
}


listProductsReleases {
    sinceBuild = "231.*"
}

// JAVA compatibility
compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
compileTestJava.options.encoding = 'UTF-8'

// Activate junit since gradle 4.7
test {
    useJUnitPlatform()
}

// Add resources directory because intellij test framework checks there for test resources (instead of build/resources)
sourceSets {
    test.output.resourcesDir = "build/classes/java/resources"
}

tasks {
    wrapper {
        gradleVersion = properties("gradleVersion").get()
    }

    patchPluginXml {
        version = properties("pluginVersion")
    }

    signPlugin {
        certificateChain = environment("CERTIFICATE_CHAIN")
        privateKey = environment("PRIVATE_KEY")
        password = environment("PRIVATE_KEY_PASSWORD")
    }

    publishPlugin {
        token = environment("PUBLISH_TOKEN")
        // The pluginVersion is based on the SemVer (https://semver.org) and supports pre-release labels, like 2.1.7-alpha.3
        // Specify pre-release label to publish the plugin in a custom Release Channel automatically. Read more:
        // https://plugins.jetbrains.com/docs/intellij/deployment.html#specifying-a-release-channel
        channels = properties("pluginVersion")
                .map { [((it.split('-') as List)[1] ?: "default").split('\\.').find { true }.toLowerCase()] }
    }
}
